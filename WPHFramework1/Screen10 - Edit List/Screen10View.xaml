<UserControl x:Class="WPHFramework1.Screen10View" 
            xmlns:controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:WPHFramework1"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d" 
             d:DesignHeight="800" d:DesignWidth="900">

    <UserControl.Resources>

        <!-- support for binding combobox cell to enum values -->
        <ObjectDataProvider x:Key="CategoryEnumDataProvider" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="local:AlbumCategory"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

    </UserControl.Resources>

    <Grid>
        <Button x:Name="DoAddNew" Content="Add New" Width="100" Height="25" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0 24 5 0" />
        <StackPanel>
            <TextBlock Text="Screen 10 - ListView with editor for selected item"
                   VerticalAlignment="Center"
                   HorizontalAlignment="Center"
                   FontSize="20" Margin="0 0 0 20"/>
           
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <!-- List  -->
                <ListView Grid.Row="0" Height="200"
                    ItemsSource="{Binding Albums}" 
                    x:Name="lsvAlbums"
                    SelectedItem="{Binding SelectedAlbum}"
                    Margin="5"
                
                    BorderThickness="0"
                    SelectedIndex="0"><!--Background="#DDD"-->
                    <ListView.View>
                        <GridView>
                            <GridViewColumn Width="300"  DisplayMemberBinding="{Binding Title}"
                                    Header="Title" />
                            <GridViewColumn Width="100"  DisplayMemberBinding="{Binding Quantity}"
                                    Header="Quantity" />
                            <GridViewColumn Width="100"  DisplayMemberBinding="{Binding Category}"
                                    Header="Category" />
                            <GridViewColumn Width="100"  DisplayMemberBinding="{Binding UnitPrice, StringFormat='C' }"
                                    Header="Price"  />
                            <GridViewColumn Width="100"  DisplayMemberBinding="{Binding Extension, StringFormat='C' }"
                                    Header="Extension"  />
                            <GridViewColumn Width="100"  DisplayMemberBinding="{Binding ReleaseDate, StringFormat='d' }"
                                    Header="Released"  />
                            <GridViewColumn Width="100"  DisplayMemberBinding="{Binding VendorId}"
                                    Header="Vendor Id" />
                        </GridView>
                    </ListView.View>
                </ListView>

                <!-- Details Editor  -->
                <Grid Grid.Row="1">

                    <Grid.Resources>
                        <Style TargetType="Label">
                            <Setter Property="HorizontalAlignment" Value="Right"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                            <Setter Property="Margin" Value="0 0 5 0"/>
                        </Style>
                        <Style TargetType="TextBox">
                            <Setter Property="HorizontalAlignment" Value="Stretch"/>
                            <Setter Property="VerticalAlignment" Value="Stretch"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                            <Setter Property="Margin" Value="0 0 0 0"/>
                            <Setter Property="IsEnabled" Value="{Binding IsEditMode}"/>
                        </Style>
                        <Style TargetType="controls:NumericUpDown">
                            <Setter Property="IsEnabled" Value="{Binding IsEditMode}"/>
                            <Setter Property="Width" Value="150"/>
                            <Setter Property="HorizontalAlignment" Value="Left"/>
                            <Setter Property="TextAlignment" Value="Left"/>
                        </Style>
                        <Style TargetType="ComboBox" x:Name="cbStyle">
                            <Setter Property="IsEnabled" Value="{Binding IsEditMode}"/>
                            <Setter Property="Width" Value="150"/>
                            <Setter Property="HorizontalAlignment" Value="Left"/>
                        </Style>
                        <Style TargetType="DatePicker">
                            <Setter Property="IsEnabled" Value="{Binding IsEditMode}"/>
                            <Setter Property="Width" Value="150"/>
                            <Setter Property="HorizontalAlignment" Value="Left"/>
                        </Style>
                    </Grid.Resources>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>

                    <Label Content="Title:" Grid.Row="0" Grid.Column="0" />
                    <TextBox Text="{Binding SelectedAlbum.Title, UpdateSourceTrigger=PropertyChanged}" Grid.Row="0" Grid.Column="1" />

                    <Label Content="Quantity:" Grid.Row="1" Grid.Column="0" />
                    <controls:NumericUpDown  Grid.Row="1" Grid.Column="1"
                            Value="{Binding SelectedAlbum.Quantity}"
                            Minimum="0" 
                            StringFormat="{}{0:#,#.}"
                            HideUpDownButtons="False" />

                    <Label Content="Category:" Grid.Row="2" Grid.Column="0" />
                    <ComboBox  Grid.Row="2" Grid.Column="1"
                            ItemsSource="{Binding Source={StaticResource CategoryEnumDataProvider}}"
                            SelectedItem="{Binding SelectedAlbum.Category}"
                            />

                    <Label Content="Price:" Grid.Row="3" Grid.Column="0" />
                    <controls:NumericUpDown Grid.Row="3" Grid.Column="1"
                            Value="{Binding SelectedAlbum.UnitPrice}" 
                            StringFormat="C" 
                            Minimum="0" 
                            HideUpDownButtons="False" />

                    <Label Content="Released:" Grid.Row="4" Grid.Column="0" />
                    <DatePicker Grid.Row="4" Grid.Column="1" 
                            SelectedDate="{Binding SelectedAlbum.ReleaseDate}" 
                            />

                     <!-- Example of combo box whereby we capture and store id values but combobox displays id + name -->
                    <Label Content="Vendor:" Grid.Row="5" Grid.Column="0" />
                    <ComboBox  Grid.Row="5" Grid.Column="1"
                            ItemsSource="{Binding Vendors}"
                            SelectedValuePath="Id"
                            SelectedValue="{Binding Path=SelectedAlbum.VendorId}" > 
                        <!--Alternatively, just use DisplayMemberPath="Name" instead of the following template -->
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock>
                                    <Run Text="{Binding Path=Id}"/>
                                    <Run Text=" - "/>
                                    <Run Text="{Binding Path=Name}" />
                                </TextBlock>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                  
                    <!-- Buttons -->
                    <Button x:Name="DoEditMode" Grid.Row="0" Grid.Column="2" Content="Edit" Width="100" />
                    <Button x:Name="DoCancel"  Grid.Row="1" Grid.Column="2" Content="Cancel" Width="100" IsEnabled="{Binding IsEditMode}"/>
                    <Button x:Name="DoSave"  Grid.Row="2" Grid.Column="2" Content="Save" Width="100"  IsEnabled="{Binding IsEditMode}"/>
                    <Button x:Name="DoDelete"  Grid.Row="4" Grid.Column="2" Content="Delete" Width="100" />

                </Grid>
            </Grid>

        </StackPanel>

    </Grid>
</UserControl>
